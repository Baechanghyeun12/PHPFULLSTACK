<?php

// 콘솔에 출력
// 프린트가 에코보다 속도가 살짝 빨라서 에코를 많이 쓴다.
// print "프린트";

// echo "에코";


// 키값과 벨류값을 보여주는 함수
// print_r(array(1,2,3));

// 내부구조를 자세하게 보여주는 함수
// var_dump(array(3,4,5));




// 변수 : 정보들을 저장하는 장소

// 1. 가장 앞에 숫자를 쓸 수 없다.
// 2. 언더바를 빼고는 특수문자를 사용할 수 없다.
// 3. 한글을 변수명으로 주면 안된다.

$인트 = 1; // 절대 사용하면 안되는 변수명(영어, 숫자, _만 사용할것)

$int_i = 1; // 변수 $int_i에 1이라는 값을 저장한것이다.

// echo $int_i; // $int_i를 출력한다.

$sum = $int_i + 5; // $sum이라는 변수에 $int_i + 5의 결과 값을 저장한다.





// 스네이크 기법 : 단어를 영어 소문자만 사용, 단어사이의 연결은 언더바 '_' 로 작성하는 방법
// 카멜 기법 : 영어만 사용, 단어 사이의 첫글자로 대문자로 작성( 예 : $arrFood)


// 숫자 10을 변수 $i_ten, 숫자 5를 변수 $i_five, 숫자 8을 변수 $i_eight, 숫자 3을 변수 $i_three 에 저장하고,
// 아래 연산을 해주세요.
// 10 - 5 + 8 하고, 3으로 나눈 나머지를 구해주세요.

// $i_ten = 10; // $i_ten에 10이라는 값을 저장을 한다.
// $i_five = 5; // $i_five에 5이라는 값을 저장을 한다.
// $i_eight = 8; // $i_eight에 8이라는 값을 저장을 한다.
// $i_three = 3; // $i_three에 3이라는 값을 저장을 한다.

// $i_result = ($i_ten - $i_five + $i_eight) % $i_three; // 10 - 5 + 8 하고, 3으로 나눈 나머지 값을 $i_result 라는 변수에 저장한다.

// echo $i_result; // $i_result를 출력한다.





// // 증가 연산자, 감소 연산자
// $i_increase = 0;
// $i_decrease = 0;

// ++$i_increase; // 전위 증가 연산자 : 연산을 먼저한다.
// $i_increase++; // 후위 증가 연산자 : 다른처리를 다 하고 증가를 시킨다.

// --$i_decrease; // 전위 감소 연산자
// $i_decrease--; // 후위 감소 연산자

// // echo $i_increase;

// $i_increase = 0;
// echo ++$i_increase; // 증가 연산을 하고 변수에 값을 저장
// echo $i_increase++; // 값을 출력하고 연산을 하여 변수에 저장
// echo ++$i_increase; // 증가 연산을 하고 변수에 값을 저장

// // 산술대입 연산자
// $i = 0;
// $i = $i + 2;
// $i += 2;
// $i -= 1;
// $i *= 3;
// $i /= 4;
// $i %= 6;


// $str = "aa";
// $str .= "bb"; // 문자열 대입 연산자 : 문자열을 합치고 변수에 저장한다.
// echo $str;

// 비교 연산자
/*
$a < $b : a가 b보다 작다, b가 a보다 크다. 
$a > $b : a가 b보다 크다, b가 a보다 작다.

$a <= $b : a가 b보다 작거나 같다. b가 a보다 크거나 같다.
$a >= $b : a가 b보다 크거나 같다. b가 a보다 작거나 같다.

$a != $b : a와 b의 값이 다르다.
$a !== $b : a와 b의 값과 데이터형식이 다르다.

$a == $b : a와 b의 값이 같다
$a === $b : a와 b의 값과 데이터형식이 같다

***테이터를 비교할 때는 데이터 형식까지 비교해야 버그가 줄어든다.
*버그 : 개발자가 의도하지않은 결과값이 나오는거
*/

// $a = 1;
// $b = "1";
// var_dump( $a != $b ); // 값만 비교 했을때 같기때문에 펄스가 나온다.
// var_dump( $a !== $b ); // 값과 데이터 형식을 비교햇을 때 다르기때문에 트루가 나온다.
// $a = 1;
// $b = 1;
// var_dump( $a != $b ); 
// var_dump( $a !== $b );





/*
논리 연사자
&& (and연산자) : 모든 조건이 만족해야할 때 사용, 조건 개수는 제한이 없다.
$i = 1;
var_dump( $i === 1 && $i <= 1 && $i > 0);


|| (or연산자) : 여러 조건중 하나만 만족할 때 사용
$i = 1;
var_dump( $i === 1 || $i < 1 || $i > 0);


! (not연산자) : 결과를 반전시킬 때 사용
$i = 1;
var_dump( !($i === 2) );



삼항 연산자 : 조건 ? 참일 경우 : 거짓일 경우
$i = 1;
$str = "";
$i > 0 ? $str "000" : $str = "111";
echo $str;

삼항 연산자를 이용해서 짝수일때는 "짝수"를 출력
홀수 일때는 "홀수"를 출력한느 프로그램을 만들어주세요.
$i = 0;
$str = "";
$i %2 === 0 ? $str = "짝수" : $str ="홀수";  =>   $i를 2로 나눴을때 나머지가 0이면 "짝수"를 변수$str에      저장하고0이아니면 "홀수"를 변수 $str에 저장한다
echo $str;  => //저장한 $str값을 출력한다

*/










//-------------------------------------------------------------------------------------------------------
// 보강 2
//-------------------------------------------------------------------------------------------------------
/* 조 건 문

1. if문
$i = 1;
if( $i === "1" )
{
    echo "문자열 1입니다.";
}
else if( $i === 1)
{
    echo "숫자 1입니다.";
}
else {
    echo "1이 아닙니다.";
}

if(조건문)
{
    처리
}
else if(조건문)
{
    처리
}
else
{
    위의 조건문이 아무것도 실행 되지 않았을 때 실행된다.
}

*/
// 과목의 종류는 국어, 영어, 수학, 과학
// 평균점수가 60점 이상이고, 각 과목별 점수가 40점 이상 일 때 "합격"을 출력
// 그 외는 "불합격"을 출력하는 프로그램을 만들어 주세요.
$kl = 10;
$eng = 100;
$math = 100;
$science = 100;
$avg = ($kl + $eng + $math +$science)/4;

// if ( $avg >= 60 && $kl >=40 && $eng >=40 && $math >=40 && $science >=40 )
// {
//     echo "합격";
// }
// else
// {
//     echo "불합격";
// }



/* switch문 : 비교해야 되는 값이 딱 정해저 있을때 사용하면 좋은 조건문 break를 꼭 써줘야 된다.*/
// $str_loc 에 지역명을 저장하고,
// 서울은 "서울사람", 대구는 "대구사람", 부산은 "부산사람",
// 그 외는 "타지역 사람"을 출력하는 프로그램을 switch문으로 작성해주세요.
// $str_loc = "대구";

// switch ($str_loc)
// {
//     case "서울":
//         echo "서울사람";
//         break;
//     case "대구":
//         echo "대구사람";
//         break;
//     case "부산":
//         echo "부산사람";
//         break;
    
//     default:
//         echo "타지역 사람";
//         break;
// }


/* 반복문 : while, for, do_while, foreach */
// $i = 1;
// while문 : 조건을 체크하고 연산을 실행하는 루프
// while ($i === 1)
// {
//     echo $i;
//     break;
// }
// $i = 1;

// do-while문 : 연산을 실행하고 조건을 체크하는 루프
// do
// {
//     echo $i;    
// }
// while ($i !== 1);

// for문 : 시작과 끝을 우리가 지정해주는 루프(루프의 횟수를 지정가능)
// for ($i=0; $i < 2; $i++)
// { 
//     echo "$i\n";
// }

// 1 ~ 50 까지, 반복문을 이용해서 더하는 프로그램을 만들어주세요.
$num = 50;
$j = 0;
for ($i=1; $i <= $num; $i++) { 
    $j += $i;
}
// echo $j;



//while문으로 작성할때
$i = 1;
$result_sum = 0;
while ($i <= 50)
{
    $result_sum += $i;
    $i++;
}
echo $result_sum;
















































